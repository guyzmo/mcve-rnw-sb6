import path from "path";

const toPath = (_path: string) => path.join(process.cwd(), _path);

module.exports = {
  reactOptions: {
    fastRefresh: true,
    strictMode: true,
  },
  stories: [`../src/**/*.stories.*`],
  addons: [
    {
      name: "@storybook/preset-create-react-app",
      options: {
        tsDocgenLoaderOptions: {},
      },
    },
    "@storybook/addon-docs",
    "@storybook/addon-storysource",
    "@storybook/addon-controls",
    "@storybook/addon-actions",
    "@storybook/addon-a11y",
    "@storybook/addon-links",
    "@storybook/addon-toolbars",
    "@storybook/addon-viewport",
    "storybook-addon-designs",
  ],
  babel: async (config: any) => {
    return {
      ...config,
      // presets: [...options.presets, "react-native"],
      plugins: [...config.plugins, ["react-native-web", { commonjs: true }]],
    };
  },
  webpackFinal: async (config: any) => {
    config.externals = {
      ...config.externals,
      "react-native": true,
    };
    config.resolve.alias = {
      ...config.resolve.alias,
      "react-native$": "react-native-web",
      "react-native-svg$": "react-native-svg-web",
    };
    config.module.rules = [
      ...config.module.rules,
      {
        test: /\.(sass|scss)$/,
        use: ["resolve-url-loader"],
        include: path.resolve(__dirname, "../src/assets"),
      },
      {
        test: /\.(png|woff|woff2|eot|ttf|svg)$/,
        use: [
          {
            loader: "file-loader",
            query: {
              name: `[name].[ext]`,
            },
          },
        ],
        include: path.resolve(__dirname, "../src/assets"),
      },
    ];
    return config;
  },
};
